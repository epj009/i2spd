**===== 11/22 evening session; start @ 1940, finish @ 2013**
                       again@; start @ 2100, finish @ 2230

Finished exercise #3, which really forced me to think hard about the order of
evaluation and the result. The answer is:

(string-append (string-append (substring str 0 i) "_") (substring str i 10))

Exercise #4 answer, or change i to any valid number place in the string.

(string-ith str i)

IMAGES -- 3 flavors of image primitive operations:
 1. Creation of basic images,
 2. Image properties (image-height & image-width), and
 3. Functions that compose images (overlay, place-image, add-line etc.)
 
Exercise #5: after adding the (define cat ~) line to the definitions area,
create an expression that counts the number of pixels in the image.

Left off on exercise #6.

**===== 11/22 morning session; start @ 0540, finish @ 0630**

Remember to save each of your exercise solutions as a Racket file in 
C:\Users\v2chrisb\Documents\GitHub\i2spd\HtDP-2\Ch1-Arithmetic.

This is exercise #3.

Add the following two lines to the definitions area:
 
(define str "helloworld")
(define i 5)

Then create an expression using string primitives that adds "_" at position i.
In general this means the resulting string is longer than the original one;
here the expected result is "hello_world".

**===== 11/21 morning session; start @ 0531, finish @ 0630**

Comments: remember that DrRacket counts from 0, not 1. This became apparent
again when you played with the string-ith function. Stopped @ 1.3 "Mixing It Up"

Ex 1: compute the distance of some specific Cartesian point (x,y) from the
origin (0,0).

(define x 3)
(define y 4)

(sqrt (+ (sqr x) (sqr y)))

Ex 2: use string primitives to create an expression that concatenates prefix and
suffix and adds "_" between them. When you run this program, you will see
"hello_world" in the interactions area.

(define prefix "hello")
(define suffix "world")

(string-append prefix "_" suffix)

**===== 11/20 morning session; start @ 0555, finish @ 0605**

Starting an entirely new journal on an entirely new course of study, that is,
I'm leaving the UBC course for awhile with the hope of strengthening my 
programming foundation here in the How to Design Programs 2 book.

Up really early this morning but had to spend a big chunk of time catching-up
from being on the road all day yesterday in RC (TAACCCT "GroundWorks").

I should be able to get to the arithmetic exercises this evening and I should
also be able to move through them at a fair clip. I don't, however, want to be
hasty with the material because I can already see there are some good concept
lessons here.
